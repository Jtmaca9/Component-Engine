{"id":"../node_modules/regjsgen/regjsgen.js","dependencies":[{"name":"/Users/t826493/Documents/Jareth/component-engine/component-engine/package.json","includedInParent":true,"mtime":1560914572667},{"name":"/Users/t826493/Documents/Jareth/component-engine/component-engine/node_modules/regjsgen/package.json","includedInParent":true,"mtime":1560811101747}],"generated":{"js":"var global = arguments[3];\nvar define;\n/*!\n * regjsgen 0.5.0\n * Copyright 2014-2018 Benjamin Tan <https://bnjmnt4n.now.sh/>\n * Available under MIT license <https://github.com/bnjmnt4n/regjsgen/blob/master/LICENSE>\n */\n;(function() {\n  'use strict';\n\n  // Used to determine if values are of the language type `Object`.\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  // Used as a reference to the global object.\n  var root = (objectTypes[typeof window] && window) || this;\n\n  // Detect free variable `exports`.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Detect free variable `module`.\n  var hasFreeModule = objectTypes[typeof module] && module && !module.nodeType;\n\n  // Detect free variable `global` from Node.js or Browserified code and use it as `root`.\n  var freeGlobal = freeExports && hasFreeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Used to check objects for own properties.\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  /*--------------------------------------------------------------------------*/\n\n  // Generates a string based on the given code point.\n  // Based on https://mths.be/fromcodepoint by @mathias.\n  function fromCodePoint() {\n    var codePoint = Number(arguments[0]);\n\n    if (\n      !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n      codePoint < 0 || // not a valid Unicode code point\n      codePoint > 0x10FFFF || // not a valid Unicode code point\n      Math.floor(codePoint) != codePoint // not an integer\n    ) {\n      throw RangeError('Invalid code point: ' + codePoint);\n    }\n\n    if (codePoint <= 0xFFFF) {\n      // BMP code point\n      return String.fromCharCode(codePoint);\n    } else {\n      // Astral code point; split in surrogate halves\n      // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      codePoint -= 0x10000;\n      var highSurrogate = (codePoint >> 10) + 0xD800;\n      var lowSurrogate = (codePoint % 0x400) + 0xDC00;\n      return String.fromCharCode(highSurrogate, lowSurrogate);\n    }\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Ensures that nodes have the correct types.\n  var assertTypeRegexMap = {};\n  function assertType(type, expected) {\n    if (expected.indexOf('|') == -1) {\n      if (type == expected) {\n        return;\n      }\n\n      throw Error('Invalid node type: ' + type + '; expected type: ' + expected);\n    }\n\n    expected = hasOwnProperty.call(assertTypeRegexMap, expected)\n      ? assertTypeRegexMap[expected]\n      : (assertTypeRegexMap[expected] = RegExp('^(?:' + expected + ')$'));\n\n    if (expected.test(type)) {\n      return;\n    }\n\n    throw Error('Invalid node type: ' + type + '; expected types: ' + expected);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Generates a regular expression string based on an AST.\n  function generate(node) {\n    var type = node.type;\n\n    if (hasOwnProperty.call(generators, type)) {\n      return generators[type](node);\n    }\n\n    throw Error('Invalid node type: ' + type);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  function generateAlternative(node) {\n    assertType(node.type, 'alternative');\n\n    var terms = node.body,\n        i = -1,\n        length = terms.length,\n        result = '';\n\n    while (++i < length) {\n      result += generateTerm(terms[i]);\n    }\n\n    return result;\n  }\n\n  function generateAnchor(node) {\n    assertType(node.type, 'anchor');\n\n    switch (node.kind) {\n      case 'start':\n        return '^';\n      case 'end':\n        return '$';\n      case 'boundary':\n        return '\\\\b';\n      case 'not-boundary':\n        return '\\\\B';\n      default:\n        throw Error('Invalid assertion');\n    }\n  }\n\n  function generateAtom(node) {\n    assertType(node.type, 'anchor|characterClass|characterClassEscape|dot|group|reference|value');\n\n    return generate(node);\n  }\n\n  function generateCharacterClass(node) {\n    assertType(node.type, 'characterClass');\n\n    var classRanges = node.body,\n        i = -1,\n        length = classRanges.length,\n        result = '';\n\n    if (node.negative) {\n      result += '^';\n    }\n\n    while (++i < length) {\n      result += generateClassAtom(classRanges[i]);\n    }\n\n    return '[' + result + ']';\n  }\n\n  function generateCharacterClassEscape(node) {\n    assertType(node.type, 'characterClassEscape');\n\n    return '\\\\' + node.value;\n  }\n\n  function generateUnicodePropertyEscape(node) {\n    assertType(node.type, 'unicodePropertyEscape');\n\n    return '\\\\' + (node.negative ? 'P' : 'p') + '{' + node.value + '}';\n  }\n\n  function generateCharacterClassRange(node) {\n    assertType(node.type, 'characterClassRange');\n\n    var min = node.min,\n        max = node.max;\n\n    if (min.type == 'characterClassRange' || max.type == 'characterClassRange') {\n      throw Error('Invalid character class range');\n    }\n\n    return generateClassAtom(min) + '-' + generateClassAtom(max);\n  }\n\n  function generateClassAtom(node) {\n    assertType(node.type, 'anchor|characterClassEscape|characterClassRange|dot|value');\n\n    return generate(node);\n  }\n\n  function generateDisjunction(node) {\n    assertType(node.type, 'disjunction');\n\n    var body = node.body,\n        i = -1,\n        length = body.length,\n        result = '';\n\n    while (++i < length) {\n      if (i != 0) {\n        result += '|';\n      }\n      result += generate(body[i]);\n    }\n\n    return result;\n  }\n\n  function generateDot(node) {\n    assertType(node.type, 'dot');\n\n    return '.';\n  }\n\n  function generateGroup(node) {\n    assertType(node.type, 'group');\n\n    var result = '';\n\n    switch (node.behavior) {\n      case 'normal':\n        if (node.name) {\n          result += '?<' + generateIdentifier(node.name) + '>';\n        }\n        break;\n      case 'ignore':\n        result += '?:';\n        break;\n      case 'lookahead':\n        result += '?=';\n        break;\n      case 'negativeLookahead':\n        result += '?!';\n        break;\n      case 'lookbehind':\n        result += '?<=';\n        break;\n      case 'negativeLookbehind':\n        result += '?<!';\n        break;\n      default:\n        throw Error('Invalid behaviour: ' + node.behaviour);\n    }\n\n    var body = node.body,\n        i = -1,\n        length = body.length;\n\n    while (++i < length) {\n      result += generate(body[i]);\n    }\n\n    return '(' + result + ')';\n  }\n\n  function generateIdentifier(node) {\n    assertType(node.type, 'identifier');\n\n    return node.value;\n  }\n\n  function generateQuantifier(node) {\n    assertType(node.type, 'quantifier');\n\n    var quantifier = '',\n        min = node.min,\n        max = node.max;\n\n    if (max == null) {\n      if (min == 0) {\n        quantifier = '*';\n      } else if (min == 1) {\n        quantifier = '+';\n      } else {\n        quantifier = '{' + min + ',}';\n      }\n    } else if (min == max) {\n      quantifier = '{' + min + '}';\n    } else if (min == 0 && max == 1) {\n      quantifier = '?';\n    } else {\n      quantifier = '{' + min + ',' + max + '}';\n    }\n\n    if (!node.greedy) {\n      quantifier += '?';\n    }\n\n    return generateAtom(node.body[0]) + quantifier;\n  }\n\n  function generateReference(node) {\n    assertType(node.type, 'reference');\n\n    if (node.matchIndex) {\n      return '\\\\' + node.matchIndex;\n    }\n    if (node.name) {\n      return '\\\\k<' + generateIdentifier(node.name) + '>';\n    }\n\n    throw new Error('Unknown reference type');\n  }\n\n  function generateTerm(node) {\n    assertType(node.type, 'anchor|characterClass|characterClassEscape|empty|group|quantifier|reference|unicodePropertyEscape|value');\n\n    return generate(node);\n  }\n\n  function generateValue(node) {\n    assertType(node.type, 'value');\n\n    var kind = node.kind,\n        codePoint = node.codePoint;\n\n    if (typeof codePoint != 'number') {\n      throw new Error('Invalid code point: ' + codePoint);\n    }\n\n    switch (kind) {\n      case 'controlLetter':\n        return '\\\\c' + fromCodePoint(codePoint + 64);\n      case 'hexadecimalEscape':\n        return '\\\\x' + ('00' + codePoint.toString(16).toUpperCase()).slice(-2);\n      case 'identifier':\n        return '\\\\' + fromCodePoint(codePoint);\n      case 'null':\n        return '\\\\' + codePoint;\n      case 'octal':\n        return '\\\\' + codePoint.toString(8);\n      case 'singleEscape':\n        switch (codePoint) {\n          case 0x0008:\n            return '\\\\b';\n          case 0x0009:\n            return '\\\\t';\n          case 0x000A:\n            return '\\\\n';\n          case 0x000B:\n            return '\\\\v';\n          case 0x000C:\n            return '\\\\f';\n          case 0x000D:\n            return '\\\\r';\n          default:\n            throw Error('Invalid code point: ' + codePoint);\n        }\n      case 'symbol':\n        return fromCodePoint(codePoint);\n      case 'unicodeEscape':\n        return '\\\\u' + ('0000' + codePoint.toString(16).toUpperCase()).slice(-4);\n      case 'unicodeCodePointEscape':\n        return '\\\\u{' + codePoint.toString(16).toUpperCase() + '}';\n      default:\n        throw Error('Unsupported node kind: ' + kind);\n    }\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Used to generate strings for each node type.\n  var generators = {\n    'alternative': generateAlternative,\n    'anchor': generateAnchor,\n    'characterClass': generateCharacterClass,\n    'characterClassEscape': generateCharacterClassEscape,\n    'characterClassRange': generateCharacterClassRange,\n    'unicodePropertyEscape': generateUnicodePropertyEscape,\n    'disjunction': generateDisjunction,\n    'dot': generateDot,\n    'group': generateGroup,\n    'quantifier': generateQuantifier,\n    'reference': generateReference,\n    'value': generateValue\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export regjsgen.\n  var regjsgen = {\n    'generate': generate\n  };\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Define as an anonymous module so it can be aliased through path mapping.\n    define(function() {\n      return regjsgen;\n    });\n\n    root.regjsgen = regjsgen;\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && hasFreeModule) {\n    // Export for CommonJS support.\n    freeExports.generate = generate;\n  }\n  else {\n    // Export to the global object.\n    root.regjsgen = regjsgen;\n  }\n}.call(this));\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/regjsgen/regjsgen.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}}],"sources":{"../node_modules/regjsgen/regjsgen.js":"/*!\n * regjsgen 0.5.0\n * Copyright 2014-2018 Benjamin Tan <https://bnjmnt4n.now.sh/>\n * Available under MIT license <https://github.com/bnjmnt4n/regjsgen/blob/master/LICENSE>\n */\n;(function() {\n  'use strict';\n\n  // Used to determine if values are of the language type `Object`.\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  // Used as a reference to the global object.\n  var root = (objectTypes[typeof window] && window) || this;\n\n  // Detect free variable `exports`.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Detect free variable `module`.\n  var hasFreeModule = objectTypes[typeof module] && module && !module.nodeType;\n\n  // Detect free variable `global` from Node.js or Browserified code and use it as `root`.\n  var freeGlobal = freeExports && hasFreeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Used to check objects for own properties.\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  /*--------------------------------------------------------------------------*/\n\n  // Generates a string based on the given code point.\n  // Based on https://mths.be/fromcodepoint by @mathias.\n  function fromCodePoint() {\n    var codePoint = Number(arguments[0]);\n\n    if (\n      !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n      codePoint < 0 || // not a valid Unicode code point\n      codePoint > 0x10FFFF || // not a valid Unicode code point\n      Math.floor(codePoint) != codePoint // not an integer\n    ) {\n      throw RangeError('Invalid code point: ' + codePoint);\n    }\n\n    if (codePoint <= 0xFFFF) {\n      // BMP code point\n      return String.fromCharCode(codePoint);\n    } else {\n      // Astral code point; split in surrogate halves\n      // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      codePoint -= 0x10000;\n      var highSurrogate = (codePoint >> 10) + 0xD800;\n      var lowSurrogate = (codePoint % 0x400) + 0xDC00;\n      return String.fromCharCode(highSurrogate, lowSurrogate);\n    }\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Ensures that nodes have the correct types.\n  var assertTypeRegexMap = {};\n  function assertType(type, expected) {\n    if (expected.indexOf('|') == -1) {\n      if (type == expected) {\n        return;\n      }\n\n      throw Error('Invalid node type: ' + type + '; expected type: ' + expected);\n    }\n\n    expected = hasOwnProperty.call(assertTypeRegexMap, expected)\n      ? assertTypeRegexMap[expected]\n      : (assertTypeRegexMap[expected] = RegExp('^(?:' + expected + ')$'));\n\n    if (expected.test(type)) {\n      return;\n    }\n\n    throw Error('Invalid node type: ' + type + '; expected types: ' + expected);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Generates a regular expression string based on an AST.\n  function generate(node) {\n    var type = node.type;\n\n    if (hasOwnProperty.call(generators, type)) {\n      return generators[type](node);\n    }\n\n    throw Error('Invalid node type: ' + type);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  function generateAlternative(node) {\n    assertType(node.type, 'alternative');\n\n    var terms = node.body,\n        i = -1,\n        length = terms.length,\n        result = '';\n\n    while (++i < length) {\n      result += generateTerm(terms[i]);\n    }\n\n    return result;\n  }\n\n  function generateAnchor(node) {\n    assertType(node.type, 'anchor');\n\n    switch (node.kind) {\n      case 'start':\n        return '^';\n      case 'end':\n        return '$';\n      case 'boundary':\n        return '\\\\b';\n      case 'not-boundary':\n        return '\\\\B';\n      default:\n        throw Error('Invalid assertion');\n    }\n  }\n\n  function generateAtom(node) {\n    assertType(node.type, 'anchor|characterClass|characterClassEscape|dot|group|reference|value');\n\n    return generate(node);\n  }\n\n  function generateCharacterClass(node) {\n    assertType(node.type, 'characterClass');\n\n    var classRanges = node.body,\n        i = -1,\n        length = classRanges.length,\n        result = '';\n\n    if (node.negative) {\n      result += '^';\n    }\n\n    while (++i < length) {\n      result += generateClassAtom(classRanges[i]);\n    }\n\n    return '[' + result + ']';\n  }\n\n  function generateCharacterClassEscape(node) {\n    assertType(node.type, 'characterClassEscape');\n\n    return '\\\\' + node.value;\n  }\n\n  function generateUnicodePropertyEscape(node) {\n    assertType(node.type, 'unicodePropertyEscape');\n\n    return '\\\\' + (node.negative ? 'P' : 'p') + '{' + node.value + '}';\n  }\n\n  function generateCharacterClassRange(node) {\n    assertType(node.type, 'characterClassRange');\n\n    var min = node.min,\n        max = node.max;\n\n    if (min.type == 'characterClassRange' || max.type == 'characterClassRange') {\n      throw Error('Invalid character class range');\n    }\n\n    return generateClassAtom(min) + '-' + generateClassAtom(max);\n  }\n\n  function generateClassAtom(node) {\n    assertType(node.type, 'anchor|characterClassEscape|characterClassRange|dot|value');\n\n    return generate(node);\n  }\n\n  function generateDisjunction(node) {\n    assertType(node.type, 'disjunction');\n\n    var body = node.body,\n        i = -1,\n        length = body.length,\n        result = '';\n\n    while (++i < length) {\n      if (i != 0) {\n        result += '|';\n      }\n      result += generate(body[i]);\n    }\n\n    return result;\n  }\n\n  function generateDot(node) {\n    assertType(node.type, 'dot');\n\n    return '.';\n  }\n\n  function generateGroup(node) {\n    assertType(node.type, 'group');\n\n    var result = '';\n\n    switch (node.behavior) {\n      case 'normal':\n        if (node.name) {\n          result += '?<' + generateIdentifier(node.name) + '>';\n        }\n        break;\n      case 'ignore':\n        result += '?:';\n        break;\n      case 'lookahead':\n        result += '?=';\n        break;\n      case 'negativeLookahead':\n        result += '?!';\n        break;\n      case 'lookbehind':\n        result += '?<=';\n        break;\n      case 'negativeLookbehind':\n        result += '?<!';\n        break;\n      default:\n        throw Error('Invalid behaviour: ' + node.behaviour);\n    }\n\n    var body = node.body,\n        i = -1,\n        length = body.length;\n\n    while (++i < length) {\n      result += generate(body[i]);\n    }\n\n    return '(' + result + ')';\n  }\n\n  function generateIdentifier(node) {\n    assertType(node.type, 'identifier');\n\n    return node.value;\n  }\n\n  function generateQuantifier(node) {\n    assertType(node.type, 'quantifier');\n\n    var quantifier = '',\n        min = node.min,\n        max = node.max;\n\n    if (max == null) {\n      if (min == 0) {\n        quantifier = '*';\n      } else if (min == 1) {\n        quantifier = '+';\n      } else {\n        quantifier = '{' + min + ',}';\n      }\n    } else if (min == max) {\n      quantifier = '{' + min + '}';\n    } else if (min == 0 && max == 1) {\n      quantifier = '?';\n    } else {\n      quantifier = '{' + min + ',' + max + '}';\n    }\n\n    if (!node.greedy) {\n      quantifier += '?';\n    }\n\n    return generateAtom(node.body[0]) + quantifier;\n  }\n\n  function generateReference(node) {\n    assertType(node.type, 'reference');\n\n    if (node.matchIndex) {\n      return '\\\\' + node.matchIndex;\n    }\n    if (node.name) {\n      return '\\\\k<' + generateIdentifier(node.name) + '>';\n    }\n\n    throw new Error('Unknown reference type');\n  }\n\n  function generateTerm(node) {\n    assertType(node.type, 'anchor|characterClass|characterClassEscape|empty|group|quantifier|reference|unicodePropertyEscape|value');\n\n    return generate(node);\n  }\n\n  function generateValue(node) {\n    assertType(node.type, 'value');\n\n    var kind = node.kind,\n        codePoint = node.codePoint;\n\n    if (typeof codePoint != 'number') {\n      throw new Error('Invalid code point: ' + codePoint);\n    }\n\n    switch (kind) {\n      case 'controlLetter':\n        return '\\\\c' + fromCodePoint(codePoint + 64);\n      case 'hexadecimalEscape':\n        return '\\\\x' + ('00' + codePoint.toString(16).toUpperCase()).slice(-2);\n      case 'identifier':\n        return '\\\\' + fromCodePoint(codePoint);\n      case 'null':\n        return '\\\\' + codePoint;\n      case 'octal':\n        return '\\\\' + codePoint.toString(8);\n      case 'singleEscape':\n        switch (codePoint) {\n          case 0x0008:\n            return '\\\\b';\n          case 0x0009:\n            return '\\\\t';\n          case 0x000A:\n            return '\\\\n';\n          case 0x000B:\n            return '\\\\v';\n          case 0x000C:\n            return '\\\\f';\n          case 0x000D:\n            return '\\\\r';\n          default:\n            throw Error('Invalid code point: ' + codePoint);\n        }\n      case 'symbol':\n        return fromCodePoint(codePoint);\n      case 'unicodeEscape':\n        return '\\\\u' + ('0000' + codePoint.toString(16).toUpperCase()).slice(-4);\n      case 'unicodeCodePointEscape':\n        return '\\\\u{' + codePoint.toString(16).toUpperCase() + '}';\n      default:\n        throw Error('Unsupported node kind: ' + kind);\n    }\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Used to generate strings for each node type.\n  var generators = {\n    'alternative': generateAlternative,\n    'anchor': generateAnchor,\n    'characterClass': generateCharacterClass,\n    'characterClassEscape': generateCharacterClassEscape,\n    'characterClassRange': generateCharacterClassRange,\n    'unicodePropertyEscape': generateUnicodePropertyEscape,\n    'disjunction': generateDisjunction,\n    'dot': generateDot,\n    'group': generateGroup,\n    'quantifier': generateQuantifier,\n    'reference': generateReference,\n    'value': generateValue\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export regjsgen.\n  var regjsgen = {\n    'generate': generate\n  };\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Define as an anonymous module so it can be aliased through path mapping.\n    define(function() {\n      return regjsgen;\n    });\n\n    root.regjsgen = regjsgen;\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && hasFreeModule) {\n    // Export for CommonJS support.\n    freeExports.generate = generate;\n  }\n  else {\n    // Export to the global object.\n    root.regjsgen = regjsgen;\n  }\n}.call(this));\n"},"lineCount":404}},"error":null,"hash":"2e97aa3209d6f04f4b27de03d068615d","cacheData":{"env":{}}}